- 2019-01-14
  - Email correspondence with M.Pickering, Zubin Duggal & others about LSIF, HIE, Kythe
    - Wrote Kythe/LSIF comparison gist
      - https://gist.github.com/robinp/76f9d3d91387da5162f773895d4e1d15
      - got feedback from Kythe people at https://groups.google.com/forum/#!topic/kythe/ySq83r1JqM0
      - pinged LSIF issue at https://github.com/Microsoft/language-server-protocol/issues/623#issuecomment-454297184
    - Personal conclusion:
      - There's still long-term value in keeping Kythe output
      - haskell-indexer may migrate to HIE as source (vs direct GHC)
        - HIE now in ghc HEAD, see 'compiler/hieFile'.
        - Likely released in GHC 8.8.
    - took: 1.5 hrs
  - pykythe
    - Kythe indexer for Python, experimental.
      - Would be great if could be ran over Starlark Bazel files.
        - .. which is a subset of Python syntax (strictly?)
        - .. so we could have xref'd bzl files, easing development.
    - Got it to compile
      - TODO: Need to add nix-expr for reproducible compile.
      - Entries don't render much in web server.
        - Peter said some Kythe facts are likely missing.
        - TODO: Maybe I'll check later if something obvious is missing.
    - Peter Ludemann (peter.ludemann@gmail.com) will update it in a few weeks
      with new features.
      - AI: check back
    - took: 1.5 hrs

- 2019-01-15
  - Update haskell-indexer roadmap.
    - Opened PR https://github.com/google/haskell-indexer/pull/90.
    - took: 30 mins
  - Pondered about representation of polymorphic types in Kythe.
    - Related to https://github.com/google/haskell-indexer/issues/31.
    - Devised a scheme that can save duplication and support some type-based
      searching as well (better than nothing at least).
      - Will have to run the idea through Kythe team.
      - see images/kythe_type_share.jpg, need to explain yet.
    - took: 20 mins
  - Kythe extractor benefits
    - Asked on https://groups.google.com/forum/#!topic/kythe/FzC5ni5nNh8
    - took: 15 mins
  - Final review for haskell-indexer source-plugin PR.
    - https://github.com/google/haskell-indexer/pull/89.
    - Almost good to go.
    - took: 30 mins
  - Review Kythe analyzer driver RFC
    - https://github.com/kythe/kythe/pull/3339
    - took: 20 mins

- 2019-01-16
  - Compare haskell-code-explorer and haskell-indexer
    - Commented on https://github.com/alexwl/haskell-code-explorer/issues/2
    - Would be nice to use its UI as a Kythe frontend.
      - Maybe even make it generic, so it could use either Kythe or LSIF.
        Pinged the idea to the GSoC thread.
    - took: 30 mins
  - Bug: garbage at end of entries file.
    - https://github.com/google/haskell-indexer/issues/91
    - Garbage likely added by haskell-indexer?
    - took: 40 mins
  - Compile Kythe tools using nixpkgs+Bazel
    - As an exercise, before launching language server.
    - With some helper scripts this succeeds, but C++ binaries miss linking
      against ncurses.
      - Turns out kythe/third_party/llvm/BUILD has `-lcurses`, not `-lncurses`.
      - Opened https://github.com/NixOS/nixpkgs/issues/54112.
    - took: 1.5 hours

- 2019-01-17
  - Compiling Kythe
    - Mysterious but non-interesting build error.
      - See https://gist.github.com/robinp/ea7a1dc0a1ea30b8d80268010ca695f7.
    - Pushed https://github.com/TreeTide/kythe/tree/nix.
    - took: 1 hour

- 2019-01-18
  - Compiling Kythe
    - More explicit tooling for //kythe/web/ui:prod-js
    - took: 30 mins
  - pykythe
    - xrefs seem to work using Kythe tools built from HEAD.
      - for https://github.com/kythe/kythe/issues/1725.
    - see images/pykythe-xrefs.png
    - took: 10 mins
  - Mysterious Bazel java error revisited
    - Maybe due to nix reverting jvm_opts but not reverting toolchain?
      - at https://github.com/NixOS/nixpkgs/blob/59a6ec5568a6b781996abf9f4108f2ce7e4a2397/pkgs/development/tools/build-managers/bazel/default.nix#L147
    - Filed https://github.com/NixOS/nixpkgs/issues/54289
      - with it //kythe/release can be built.
    - Pushed state to https://github.com/TreeTide/kythe/tree/nix.
    - took: 2 hours

- 2019-01-22
  - Get more familiar with Kythe internals.
    - PR https://github.com/kythe/kythe/pull/3394 to fix xrefs in Kythe repo.
    - took: 7 hours

- 2019-01-25
  - Musing with traversals and recursion-schemes.
    - Triggered discussion at https://mail.haskell.org/pipermail/haskell-cafe/2019-January/130638.html
    - Maybe recursion-schemes would need some extra combinators in the spirit
      of fixplate (or at least make it more explicit in docs how to achieve).
    - took: 2 hours

- 2019-01-26
  - Kythe URIs use `?` as query separator.
    - Opened https://github.com/kythe/kythe/issues/3406.

- 2019-01-28
  - Help resolve https://github.com/NixOS/nixpkgs/issues/54289.
    - took: 30 mins

- 2019-01-30
  - Started up Kythe language server, made it serve xrefs (for Go now).
    - Needs a .kythe-settings.json in the workspace root to map vnames to
      filepaths.
    - Documentation is not found, likely needs mods to follow the new
      doc edges?
      - Found workaround, opened https://github.com/kythe/kythe/issues/3412.
        - This makes :LspHover work using vim-lsp.
    - Also, why are out-of-project symbol references not brought back?
      - Maybe it's only vim-lsp?
    - took: 3 hours
  - Looked after how should haskell-indexer extract type and doc info.
    - Types are well normalized in HIE.
    - Doc's don't seem to be included in HIE.
      - Some haddock links where they extract from HIE.
        - https://github.com/haskell/haddock/issues/715
        - https://github.com/haskell/haddock/pull/977
    - took: 30 mins

- Plan for today

- Queue.
  - Make PoC for haskell-indexer using HIE as backend.
    - So we can emit types and docs.
  - Look into indexing with rules_haskell.
  - Look at indexing nixpkgs.
    - Check https://github.com/mpickering/haskell-indexer-nix.
  - Look at the aspect-based Java extractor mentioned in the roadmap PR.
